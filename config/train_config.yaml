# Training and Export Configuration for YOLOv11 on KITTI

# Model Selection (Training)
base_model: "./ml_models/yolo11n.pt" # Using the smaller nano model

# Dataset
data_yaml: "./datasets/processed/data.yaml" # Path relative to project root, or absolute

# Training Hyperparameters
epochs: 50 # Increased for better model performance on the server
imgsz: 640 # Standard YOLO image size for better accuracy on server
batch: 8 # Increased for faster training on server GPU
device: "0" # Use GPU for server deployment
patience: 30 # Early stopping patience

# Fine-tuning specific parameters
task: "detect"  # Detection task
exist_ok: True  # Overwrite existing experiment 
freeze: 10      # Freeze first 10 layers to preserve features from pre-trained model
model_resume: True  # Resume from base_model weights entirely
close_mosaic: 10  # Disable mosaic augmentation for final 10 epochs for stability

# Augmentation Settings
augment: True
mosaic: 0.5 # Re-enabled for better training results
mixup: 0.1 # Re-enabled with small value for better training results
hsv_h: 0.015
hsv_s: 0.7
hsv_v: 0.4

# Output & Logging (Training)
project: "runs/train" # Base directory for saving runs
name: "yolov11_kitti_production" # Production model name

# --- Export Settings ---
export:
  # Path to the trained .pt model to export.
  trained_model_path: "runs/train/yolov11_kitti_production/weights/best.pt" 

  # Output path for the ONNX model
  onnx_output_path: "ml_models/best.onnx" # Relative to project root

  # Export parameters
  input_height: 640 # Standard size for better accuracy
  input_width: 640 # Standard size for better accuracy
  opset_version: 12
  enable_dynamic_axes: True
  simplify_onnx: True
